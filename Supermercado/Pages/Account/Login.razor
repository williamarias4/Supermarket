@page "/login"
@inject Blazored.LocalStorage.ILocalStorageService iLocalStorage
@inject NavigationManager NavigationManager

@using Supermercado.Data
@using Supermercado.DAO

<div class="row">
    <div class="col-md-4">
        <section>
            <h4>Digite sus credenciales para iniciar sesion</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label for="username">Nombre de Usuario</label>
                <input @bind="username" type="text" class="form-control" required />

            </div>
            <div class="form-group">
                <label for="password">Contrasenia</label>
                <input @bind="password" type="password" class="form-control" required />
            </div>
            <div class="form-group">
                <button @onclick="iniciarSesion" class="btn btn-primary">Iniciar Sesion</button>
            </div>
            <p class="text-danger">@Message</p>
        </section>
    </div>
</div>

@code{

}

@code{
    Usuario user = new Usuario();
    private string username;
    private string password;
    Usuario userSessionValue = new Usuario();
    string Message = "";

    private void iniciarSesion()
    {
        if (username != null && password != null)
        {

            CRUD crud = new CRUD();

            user = crud.validateCredentials(username, password);


            if (user.IdUsuario != 0)
            {
                Message = "";
                SaveSession();
                crud.agregarLogMovimiento(user.IdUsuario, user.NombreUsuario, "USUARIO", "SELECT", "INICIO SESION");
                NavigationManager.NavigateTo("/", forceLoad: true);
            }
            else
            {
                Message = "Se intentado conectar con un usuario que no existe en la BD. Favor validar credenciales antes de volverlo a intentar";
                return;
            }
        }
        else
        {
            Message = "Favor llenar ambos campos";
            return;
        }


    }

    protected override async Task OnInitializedAsync()
    {
        userSessionValue = await iLocalStorage.GetItemAsync<Usuario>("SessionValue");

    }

    public async void SaveSession()
    {
        Message = "Session Saved";
        await iLocalStorage.SetItemAsync("SessionValue", user);
    }

}