@page "/productos"

@using Supermercado.DAO;
@using Supermercado.Data;

@inject NavigationManager NavigationManager

<h3>Productos</h3>
<div class="container">
    <div class="row">
        <div class="col-12">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">ID Area</th>
                        <th scope="col">EAN</th>
                        <th scope="col">Descripcion</th>
                        <th scope="col">Precio</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">PLU</th>
                        <th scope="col">Peso</th>
                        <th scope="col">Accion</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in listarProductos())
                    {
                    <tr>
                        <td>@producto.idArea</td>
                        <td>@producto.ean</td>
                        <td>@producto.descripcion</td>
                        <td>@producto.precio</td>
                        <td>@producto.cantidad</td>
                        @if (producto.PLU == 0)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@producto.PLU</td>
                        }
                        @if (producto.Peso == 0)
                        {
                            <td></td>
                        }
                        else
                        {
                            <td>@producto.Peso</td>
                        }
                    <td>
                        <button type="button" class="btn btn-success" @onclick="() => enviarId(producto.id)">Modificar</button>
                        @if (producto.Peso != 0 && producto.PLU != 0)
                        {
                            <button type="button" class="btn btn-danger" @onclick="() => eliminarProductoFresco(producto.id)">Eliminar</button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-danger" @onclick="() => eliminarProducto(producto.id)">Eliminar</button>
                        }
                    </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <NavLink href="formularioProducto">
        <button class="btn btn-primary">Crear producto</button>
    </NavLink>
</div>

@code {
    private List<ProductoFresco> listarProductos()
    {
        List<Producto> p = new List<Producto>();
        List<ProductoFresco> f = new List<ProductoFresco>();
        List<ProductoFresco> aux = new List<ProductoFresco>();
        List<int> x = new List<int>();
        CRUD crud = new CRUD();
        p = crud.listarProductos();
        f = crud.listarProductosFrescos();
        for (int i = 0; i < p.Count; i++)
        {
            for (int j = 0; j < f.Count; j++)
            {
                if (p[i].id == f[j].id)
                {
                    x.Add(i);
                }
            }
        }
        if (x.Count != 0)
        {
            int z = 0;
            for (int i = 0; i < p.Count; i++)
            {
                if (i != x[z])
                {
                    aux.Add(new ProductoFresco(p[i],0,0,0));
                }
                else
                {
                    aux.Add(f[z]);
                    z++;
                }
            }
        }
        return aux;
    }

    private void eliminarProducto(int id)
    {
        CRUD crud = new CRUD();
        crud.eliminarProducto(id);
    }

    private void eliminarProductoFresco(int id)
    {
        CRUD crud = new CRUD();
        crud.eliminarProductoFresco(id);
        eliminarProducto(id);
    }

    private void enviarId(int id)
    {
        NavigationManager.NavigateTo("modificarProducto/"+id, forceLoad: true);
    }
}