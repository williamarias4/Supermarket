@page "/formularioProducto"
@inject Blazored.LocalStorage.ILocalStorageService iLocalStorage
@inject NavigationManager NavigationManager


@using Supermercado.DAO;
@using Supermercado.Data;

<form class="form-group col-md-12">
    <h3>Formulario de creacion de productos</h3>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="inputArea">Area</label>
            <select id="inputArea" class="form-control" @bind="idArea" required>
                @foreach (var area in listarAreas())
                {
                    <option value="@area.idArea">@area.descripcion</option>
                }
            </select>
        </div>
        <div class="form-group col-md-6">
            <label for="inputEAN">EAN</label>
            <input @bind="ean" type="number" class="form-control" id="inputEAN" step="1" min="1" required>
        </div>
    </div>
    <div class="form-row">
        <label for="inputDescripcion">Descripcion</label>
        <input @bind="descripcion" type="text" class="form-control" id="inputDescripcion" placeholder="Arroz Tio Pelon" required>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label for="inputPrecio">Precio en colones</label>
            <input @bind="precio" type="number" class="form-control" id="inputPrecio" step="1" min="1" required>
        </div>
        <div class="form-group col-md-6">
            <label for="inputCantidad">Cantidad</label>
            <input @bind="cantidad" type="number" class="form-control" id="inputCantidad" min="1" step="1" required>
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col-md-6">
            <fieldset>
                <legend>¿Es un producto fresco?</legend>
                <label>
                    <input type="radio" name="boolFresco" @onclick="@(() => estadoFrescoTrue())"> Si
                </label>
                <label>
                    <input type="radio" name="boolFresco" @onclick="@(() => estadoFrescoFalse())" checked> No
                </label>
            </fieldset>
        </div>
    </div>
    @if (esFresco)
    {
        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputPLU">PLU</label>
                <input @bind="PLU" type="number" class="form-control" id="inputPLU" step="1" min="1" required>
            </div>
            <div class="form-group col-md-6">
                <label for="inputPeso">Peso en gramos</label>
                <input @bind="peso" type="number" class="form-control" id="inputPeso" step="1" min="1" required>
            </div>
        </div>
    }
    @if (!string.IsNullOrWhiteSpace(descripcion))
    {
        <button @onclick="insertarProducto" type="submit" class="btn btn-primary">Crear</button>
    }
    else
    {
        <button @onclick="insertarProducto" type="submit" class="btn btn-primary" disabled>Crear</button>
    }
</form>

@code {
    private long ean;
    private string descripcion;
    private float precio;
    private int cantidad;
    private bool esFresco = false;
    private int PLU = 0;
    private int peso = 0;
    private int idArea = 1;
    Usuario userSessionValue = new Usuario();

    protected override async Task OnInitializedAsync()
    {
        userSessionValue = await iLocalStorage.GetItemAsync<Usuario>("SessionValue");

    }

    private void insertarProducto()
    {

        Producto p = new Producto(0, idArea, ean, descripcion, precio, cantidad);
        CRUD crud = new CRUD();
        if (esFresco && PLU != 0 && peso != 0)
        {
            crud.insertarProducto(p);
            Queue<Producto> colaProductos = new Queue<Producto>();
            foreach (var item in crud.listarProductos())
            {
                colaProductos.Enqueue(item);
            }
            crud.insertarProductoFresco(new ProductoFresco(colaProductos.Dequeue(), 0, PLU, peso));
            crud.agregarLogMovimiento(userSessionValue.IdUsuario, userSessionValue.NombreUsuario, "PRODUCTO", "INSERT", "INSERTAR PRODUCTO");
            crud.agregarLogMovimiento(userSessionValue.IdUsuario, userSessionValue.NombreUsuario, "PRODUCTOFRESCO", "INSERT", "INSERTAR INFORMACION FRESCO");
        }
        if (!esFresco)
        {
            crud.insertarProducto(p);
            crud.agregarLogMovimiento(userSessionValue.IdUsuario, userSessionValue.NombreUsuario, "PRODUCTO", "INSERT", "INSERTAR PRODUCTO");
        }
        else
        {
            return;
        }
    }

    public void estadoFrescoTrue()
    {
        esFresco = true;
    }

    public void estadoFrescoFalse()
    {
        esFresco = false;
    }

    private List<Area> listarAreas()
    {
        CRUD crud = new CRUD();
        crud.agregarLogMovimiento(userSessionValue.IdUsuario, userSessionValue.NombreUsuario, "AREA", "SELECT", "SELECCIONAR AREAS");
        return crud.listarAreas();
    }
}
